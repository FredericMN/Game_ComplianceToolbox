name: Build and Release ComplianceToolbox

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'  # 监听以 v 开头的标签，如 v1.0.0
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  actions: write

jobs:
  build:

    runs-on: windows-latest  

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Ensure requirements.txt is UTF-8 encoded
      shell: pwsh
      run: |
        Get-Content requirements.txt | Out-File -FilePath requirements.txt -Encoding utf8

    - name: Set up Standard Build Environment
      shell: pwsh
      run: |
        python -m venv standard_env
        .\standard_env\Scripts\Activate.ps1
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install selenium PySide6 "PySide6-Fluent-Widgets[full]" psutil openpyxl webdriver-manager pandas xlrd requests pyinstaller python-docx transformers torch huggingface_hub -i https://pypi.org/simple/

    - name: Build Standard Executable with PyInstaller
      shell: pwsh
      run: |
        .\standard_env\Scripts\Activate.ps1
        pyinstaller --name "ComplianceToolbox_standard" --windowed --icon=resources/logo.ico `
          --add-data "resources;resources" --add-data "styles;styles" `
          --add-data "CHANGELOG.md;." `
          --hidden-import=psutil --hidden-import=selenium.webdriver.edge.service `
          --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui `
          --hidden-import=PySide6.QtWidgets --hidden-import=qfluentwidgets --hidden-import=openpyxl `
          --hidden-import=webdriver_manager --hidden-import=pandas --hidden-import=xlrd --hidden-import=requests `
          --hidden-import=docx --hidden-import=python-docx --hidden-import=transformers --hidden-import=torch `
          --hidden-import=huggingface_hub `
          main.py
        Rename-Item -Path "dist\ComplianceToolbox_standard" -NewName "ComplianceToolbox_standard"

    - name: Compress Standard Build Output
      shell: pwsh
      run: |
        Compress-Archive -Path "dist\ComplianceToolbox_standard\*" -DestinationPath "ComplianceToolbox_standard.zip"
        Remove-Item -Recurse -Force "dist\ComplianceToolbox_standard"

    - name: Upload Standard Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ComplianceToolbox_standard
        path: ComplianceToolbox_standard.zip

    - name: Set up CUDA Build Environment
      shell: pwsh
      run: |
        python -m venv cuda_env
        .\cuda_env\Scripts\Activate.ps1
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install selenium PySide6 "PySide6-Fluent-Widgets[full]" psutil openpyxl webdriver-manager pandas xlrd requests pyinstaller python-docx transformers huggingface_hub
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

    - name: Build CUDA Executable with PyInstaller
      shell: pwsh
      run: |
        .\cuda_env\Scripts\Activate.ps1
        pyinstaller --name "ComplianceToolbox_cuda" --windowed --icon=resources/logo.ico `
          --add-data "resources;resources" --add-data "styles;styles" `
          --add-data "CHANGELOG.md;." `
          --hidden-import=psutil --hidden-import=selenium.webdriver.edge.service `
          --hidden-import=PySide6.QtCore --hidden-import=PySide6.QtGui `
          --hidden-import=PySide6.QtWidgets --hidden-import=qfluentwidgets --hidden-import=openpyxl `
          --hidden-import=webdriver_manager --hidden-import=pandas --hidden-import=xlrd --hidden-import=requests `
          --hidden-import=docx --hidden-import=python-docx --hidden-import=transformers --hidden-import=torch `
          --hidden-import=huggingface_hub `
          main.py
        Rename-Item -Path "dist\ComplianceToolbox_cuda" -NewName "ComplianceToolbox_cuda"

    - name: Compress CUDA Build Output
      shell: pwsh
      run: |
        Compress-Archive -Path "dist\ComplianceToolbox_cuda\*" -DestinationPath "ComplianceToolbox_cuda.zip"
        Remove-Item -Recurse -Force "dist\ComplianceToolbox_cuda"

    - name: Upload CUDA Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ComplianceToolbox_cuda
        path: ComplianceToolbox_cuda.zip

    # 自动发布到 GitHub Releases
    - name: Read CHANGELOG
      id: changelog
      shell: pwsh
      run: |
        $content = Get-Content 'CHANGELOG.md' -Raw
        $current_tag = "${{ github.ref_name }}"
        $regex = "(?s)(?<=##\s$current_tag\s).+?(?=##)"
        if ($content -match $regex) {
            $matches[0] | Out-File -FilePath release_notes.txt
        } else {
            $content | Out-File -FilePath release_notes.txt
        }

    - name: Download Standard Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: ComplianceToolbox_standard
        path: .

    - name: Download CUDA Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: ComplianceToolbox_cuda
        path: .

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ComplianceToolbox_standard.zip
          ComplianceToolbox_cuda.zip
        body_path: release_notes.txt
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
